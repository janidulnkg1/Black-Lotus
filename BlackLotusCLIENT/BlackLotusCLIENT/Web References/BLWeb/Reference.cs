//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BlackLotusCLIENT.BLWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BLWebSoap", Namespace="http://tempuri.org/")]
    public partial class BLWeb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback createConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertuserdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateuserdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteuserdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertcategorydataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatecategorydataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletecategorydataOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertorderdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateorderdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteorderdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertflowerdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateflowerdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteflowerdataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BLWeb() {
            this.Url = global::BlackLotusCLIENT.Properties.Settings.Default.BlackLotusCLIENT_BLWeb_BLWeb;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event createConnCompletedEventHandler createConnCompleted;
        
        /// <remarks/>
        public event insertuserdataCompletedEventHandler insertuserdataCompleted;
        
        /// <remarks/>
        public event updateuserdataCompletedEventHandler updateuserdataCompleted;
        
        /// <remarks/>
        public event deleteuserdataCompletedEventHandler deleteuserdataCompleted;
        
        /// <remarks/>
        public event insertcategorydataCompletedEventHandler insertcategorydataCompleted;
        
        /// <remarks/>
        public event updatecategorydataCompletedEventHandler updatecategorydataCompleted;
        
        /// <remarks/>
        public event deletecategorydataCompletedEventHandler deletecategorydataCompleted;
        
        /// <remarks/>
        public event insertorderdataCompletedEventHandler insertorderdataCompleted;
        
        /// <remarks/>
        public event updateorderdataCompletedEventHandler updateorderdataCompleted;
        
        /// <remarks/>
        public event deleteorderdataCompletedEventHandler deleteorderdataCompleted;
        
        /// <remarks/>
        public event insertflowerdataCompletedEventHandler insertflowerdataCompleted;
        
        /// <remarks/>
        public event updateflowerdataCompletedEventHandler updateflowerdataCompleted;
        
        /// <remarks/>
        public event deleteflowerdataCompletedEventHandler deleteflowerdataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createConn() {
            object[] results = this.Invoke("createConn", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createConnAsync() {
            this.createConnAsync(null);
        }
        
        /// <remarks/>
        public void createConnAsync(object userState) {
            if ((this.createConnOperationCompleted == null)) {
                this.createConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateConnOperationCompleted);
            }
            this.InvokeAsync("createConn", new object[0], this.createConnOperationCompleted, userState);
        }
        
        private void OncreateConnOperationCompleted(object arg) {
            if ((this.createConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createConnCompleted(this, new createConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertuserdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertuserdata(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType) {
            object[] results = this.Invoke("insertuserdata", new object[] {
                        userFirstname,
                        userLastname,
                        userLoginname,
                        userLoginPassword,
                        userType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertuserdataAsync(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType) {
            this.insertuserdataAsync(userFirstname, userLastname, userLoginname, userLoginPassword, userType, null);
        }
        
        /// <remarks/>
        public void insertuserdataAsync(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType, object userState) {
            if ((this.insertuserdataOperationCompleted == null)) {
                this.insertuserdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertuserdataOperationCompleted);
            }
            this.InvokeAsync("insertuserdata", new object[] {
                        userFirstname,
                        userLastname,
                        userLoginname,
                        userLoginPassword,
                        userType}, this.insertuserdataOperationCompleted, userState);
        }
        
        private void OninsertuserdataOperationCompleted(object arg) {
            if ((this.insertuserdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertuserdataCompleted(this, new insertuserdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateuserdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateuserdata(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType, string userid) {
            object[] results = this.Invoke("updateuserdata", new object[] {
                        userFirstname,
                        userLastname,
                        userLoginname,
                        userLoginPassword,
                        userType,
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateuserdataAsync(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType, string userid) {
            this.updateuserdataAsync(userFirstname, userLastname, userLoginname, userLoginPassword, userType, userid, null);
        }
        
        /// <remarks/>
        public void updateuserdataAsync(string userFirstname, string userLastname, string userLoginname, string userLoginPassword, string userType, string userid, object userState) {
            if ((this.updateuserdataOperationCompleted == null)) {
                this.updateuserdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateuserdataOperationCompleted);
            }
            this.InvokeAsync("updateuserdata", new object[] {
                        userFirstname,
                        userLastname,
                        userLoginname,
                        userLoginPassword,
                        userType,
                        userid}, this.updateuserdataOperationCompleted, userState);
        }
        
        private void OnupdateuserdataOperationCompleted(object arg) {
            if ((this.updateuserdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateuserdataCompleted(this, new updateuserdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteuserdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteuserdata(string userid) {
            object[] results = this.Invoke("deleteuserdata", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteuserdataAsync(string userid) {
            this.deleteuserdataAsync(userid, null);
        }
        
        /// <remarks/>
        public void deleteuserdataAsync(string userid, object userState) {
            if ((this.deleteuserdataOperationCompleted == null)) {
                this.deleteuserdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteuserdataOperationCompleted);
            }
            this.InvokeAsync("deleteuserdata", new object[] {
                        userid}, this.deleteuserdataOperationCompleted, userState);
        }
        
        private void OndeleteuserdataOperationCompleted(object arg) {
            if ((this.deleteuserdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteuserdataCompleted(this, new deleteuserdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertcategorydata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertcategorydata(string categoryname, string categorycost) {
            object[] results = this.Invoke("insertcategorydata", new object[] {
                        categoryname,
                        categorycost});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertcategorydataAsync(string categoryname, string categorycost) {
            this.insertcategorydataAsync(categoryname, categorycost, null);
        }
        
        /// <remarks/>
        public void insertcategorydataAsync(string categoryname, string categorycost, object userState) {
            if ((this.insertcategorydataOperationCompleted == null)) {
                this.insertcategorydataOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertcategorydataOperationCompleted);
            }
            this.InvokeAsync("insertcategorydata", new object[] {
                        categoryname,
                        categorycost}, this.insertcategorydataOperationCompleted, userState);
        }
        
        private void OninsertcategorydataOperationCompleted(object arg) {
            if ((this.insertcategorydataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertcategorydataCompleted(this, new insertcategorydataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatecategorydata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatecategorydata(string categoryname, string categorycost, string categoryid) {
            object[] results = this.Invoke("updatecategorydata", new object[] {
                        categoryname,
                        categorycost,
                        categoryid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatecategorydataAsync(string categoryname, string categorycost, string categoryid) {
            this.updatecategorydataAsync(categoryname, categorycost, categoryid, null);
        }
        
        /// <remarks/>
        public void updatecategorydataAsync(string categoryname, string categorycost, string categoryid, object userState) {
            if ((this.updatecategorydataOperationCompleted == null)) {
                this.updatecategorydataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatecategorydataOperationCompleted);
            }
            this.InvokeAsync("updatecategorydata", new object[] {
                        categoryname,
                        categorycost,
                        categoryid}, this.updatecategorydataOperationCompleted, userState);
        }
        
        private void OnupdatecategorydataOperationCompleted(object arg) {
            if ((this.updatecategorydataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatecategorydataCompleted(this, new updatecategorydataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletecategorydata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deletecategorydata(string categoryid) {
            object[] results = this.Invoke("deletecategorydata", new object[] {
                        categoryid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletecategorydataAsync(string categoryid) {
            this.deletecategorydataAsync(categoryid, null);
        }
        
        /// <remarks/>
        public void deletecategorydataAsync(string categoryid, object userState) {
            if ((this.deletecategorydataOperationCompleted == null)) {
                this.deletecategorydataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletecategorydataOperationCompleted);
            }
            this.InvokeAsync("deletecategorydata", new object[] {
                        categoryid}, this.deletecategorydataOperationCompleted, userState);
        }
        
        private void OndeletecategorydataOperationCompleted(object arg) {
            if ((this.deletecategorydataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletecategorydataCompleted(this, new deletecategorydataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertorderdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertorderdata(string orderDate, string orderCategory, string orderItemName, string orderQuantity, string orderAmount, string customerTitle, string customerFname, string customerLname, string customerContactno, string orderStatus) {
            object[] results = this.Invoke("insertorderdata", new object[] {
                        orderDate,
                        orderCategory,
                        orderItemName,
                        orderQuantity,
                        orderAmount,
                        customerTitle,
                        customerFname,
                        customerLname,
                        customerContactno,
                        orderStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertorderdataAsync(string orderDate, string orderCategory, string orderItemName, string orderQuantity, string orderAmount, string customerTitle, string customerFname, string customerLname, string customerContactno, string orderStatus) {
            this.insertorderdataAsync(orderDate, orderCategory, orderItemName, orderQuantity, orderAmount, customerTitle, customerFname, customerLname, customerContactno, orderStatus, null);
        }
        
        /// <remarks/>
        public void insertorderdataAsync(string orderDate, string orderCategory, string orderItemName, string orderQuantity, string orderAmount, string customerTitle, string customerFname, string customerLname, string customerContactno, string orderStatus, object userState) {
            if ((this.insertorderdataOperationCompleted == null)) {
                this.insertorderdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertorderdataOperationCompleted);
            }
            this.InvokeAsync("insertorderdata", new object[] {
                        orderDate,
                        orderCategory,
                        orderItemName,
                        orderQuantity,
                        orderAmount,
                        customerTitle,
                        customerFname,
                        customerLname,
                        customerContactno,
                        orderStatus}, this.insertorderdataOperationCompleted, userState);
        }
        
        private void OninsertorderdataOperationCompleted(object arg) {
            if ((this.insertorderdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertorderdataCompleted(this, new insertorderdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateorderdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateorderdata(string orderStatus, string orderID) {
            object[] results = this.Invoke("updateorderdata", new object[] {
                        orderStatus,
                        orderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateorderdataAsync(string orderStatus, string orderID) {
            this.updateorderdataAsync(orderStatus, orderID, null);
        }
        
        /// <remarks/>
        public void updateorderdataAsync(string orderStatus, string orderID, object userState) {
            if ((this.updateorderdataOperationCompleted == null)) {
                this.updateorderdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateorderdataOperationCompleted);
            }
            this.InvokeAsync("updateorderdata", new object[] {
                        orderStatus,
                        orderID}, this.updateorderdataOperationCompleted, userState);
        }
        
        private void OnupdateorderdataOperationCompleted(object arg) {
            if ((this.updateorderdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateorderdataCompleted(this, new updateorderdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteorderdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteorderdata(string orderID) {
            object[] results = this.Invoke("deleteorderdata", new object[] {
                        orderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteorderdataAsync(string orderID) {
            this.deleteorderdataAsync(orderID, null);
        }
        
        /// <remarks/>
        public void deleteorderdataAsync(string orderID, object userState) {
            if ((this.deleteorderdataOperationCompleted == null)) {
                this.deleteorderdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteorderdataOperationCompleted);
            }
            this.InvokeAsync("deleteorderdata", new object[] {
                        orderID}, this.deleteorderdataOperationCompleted, userState);
        }
        
        private void OndeleteorderdataOperationCompleted(object arg) {
            if ((this.deleteorderdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteorderdataCompleted(this, new deleteorderdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertflowerdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertflowerdata(string flowername, string flowerprice, string flowerstock) {
            object[] results = this.Invoke("insertflowerdata", new object[] {
                        flowername,
                        flowerprice,
                        flowerstock});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertflowerdataAsync(string flowername, string flowerprice, string flowerstock) {
            this.insertflowerdataAsync(flowername, flowerprice, flowerstock, null);
        }
        
        /// <remarks/>
        public void insertflowerdataAsync(string flowername, string flowerprice, string flowerstock, object userState) {
            if ((this.insertflowerdataOperationCompleted == null)) {
                this.insertflowerdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertflowerdataOperationCompleted);
            }
            this.InvokeAsync("insertflowerdata", new object[] {
                        flowername,
                        flowerprice,
                        flowerstock}, this.insertflowerdataOperationCompleted, userState);
        }
        
        private void OninsertflowerdataOperationCompleted(object arg) {
            if ((this.insertflowerdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertflowerdataCompleted(this, new insertflowerdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateflowerdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateflowerdata(string flowername, string flowerprice, string flowerstock, string flowerid) {
            object[] results = this.Invoke("updateflowerdata", new object[] {
                        flowername,
                        flowerprice,
                        flowerstock,
                        flowerid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateflowerdataAsync(string flowername, string flowerprice, string flowerstock, string flowerid) {
            this.updateflowerdataAsync(flowername, flowerprice, flowerstock, flowerid, null);
        }
        
        /// <remarks/>
        public void updateflowerdataAsync(string flowername, string flowerprice, string flowerstock, string flowerid, object userState) {
            if ((this.updateflowerdataOperationCompleted == null)) {
                this.updateflowerdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateflowerdataOperationCompleted);
            }
            this.InvokeAsync("updateflowerdata", new object[] {
                        flowername,
                        flowerprice,
                        flowerstock,
                        flowerid}, this.updateflowerdataOperationCompleted, userState);
        }
        
        private void OnupdateflowerdataOperationCompleted(object arg) {
            if ((this.updateflowerdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateflowerdataCompleted(this, new updateflowerdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteflowerdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteflowerdata(string flowerid) {
            object[] results = this.Invoke("deleteflowerdata", new object[] {
                        flowerid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteflowerdataAsync(string flowerid) {
            this.deleteflowerdataAsync(flowerid, null);
        }
        
        /// <remarks/>
        public void deleteflowerdataAsync(string flowerid, object userState) {
            if ((this.deleteflowerdataOperationCompleted == null)) {
                this.deleteflowerdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteflowerdataOperationCompleted);
            }
            this.InvokeAsync("deleteflowerdata", new object[] {
                        flowerid}, this.deleteflowerdataOperationCompleted, userState);
        }
        
        private void OndeleteflowerdataOperationCompleted(object arg) {
            if ((this.deleteflowerdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteflowerdataCompleted(this, new deleteflowerdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createConnCompletedEventHandler(object sender, createConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertuserdataCompletedEventHandler(object sender, insertuserdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertuserdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertuserdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateuserdataCompletedEventHandler(object sender, updateuserdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateuserdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateuserdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteuserdataCompletedEventHandler(object sender, deleteuserdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteuserdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteuserdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertcategorydataCompletedEventHandler(object sender, insertcategorydataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertcategorydataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertcategorydataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatecategorydataCompletedEventHandler(object sender, updatecategorydataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatecategorydataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatecategorydataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deletecategorydataCompletedEventHandler(object sender, deletecategorydataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletecategorydataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletecategorydataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertorderdataCompletedEventHandler(object sender, insertorderdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertorderdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertorderdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateorderdataCompletedEventHandler(object sender, updateorderdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateorderdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateorderdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteorderdataCompletedEventHandler(object sender, deleteorderdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteorderdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteorderdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertflowerdataCompletedEventHandler(object sender, insertflowerdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertflowerdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertflowerdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateflowerdataCompletedEventHandler(object sender, updateflowerdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateflowerdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateflowerdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteflowerdataCompletedEventHandler(object sender, deleteflowerdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteflowerdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteflowerdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591